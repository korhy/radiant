
services:
  # Symfony Application
  app:
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    image: radiant:dev
    container_name: radiant_app
    ports:
      - "8080:80"
    volumes:
      # Mount source code for development
      - .:/var/www/html
      # Exclude vendor and node_modules for performance
      - /var/www/html/vendor
      - /var/www/html/node_modules
      # Mount uploads directory
      - ./public/documents:/var/www/html/public/documents
    environment:
      - APP_ENV=dev
      - APP_DEBUG=1
      - DATABASE_URL=postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=16&charset=utf8
      - MAILER_DSN=smtp://mailer:1025
    depends_on:
      database:
        condition: service_healthy
      mailer:
        condition: service_started
    networks:
      - radiant_network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: radiant_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    networks:
      - radiant_network
###< doctrine/doctrine-bundle ###

volumes:
  database_data:
    driver: local

networks:
  radiant_network:
    driver: bridge
